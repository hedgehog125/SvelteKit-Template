import{S as mt,i as pt,s as ft,k as l,l as a,n as k,b as bt,B as Ve,h as r,q as h,a as o,w as gt,m as i,r as c,c as n,x as _t,G as e,y as wt,f as yt,t as Et,z as Tt,o as kt}from"../../chunks/index-96af3a5a.js";import{l as Pt}from"../../chunks/LinkPage-c78fc264.js";function xt(P){let t;return{c(){t=l("br"),this.h()},l(d){t=a(d,"BR",{class:!0}),this.h()},h(){k(t,"class","svelte-t39mn0")},m(d,b){bt(d,t,b)},p:Ve,i:Ve,o:Ve,d(d){d&&r(t)}}}class It extends mt{constructor(t){super(),pt(this,t,null,xt,ft,{})}}const vt={preload:`<script>
import Preload from "$util/Preload.svelte";
import downloadIcon from "$img/download.svg";
const assetsToPreload = {
	image: [
		downloadIcon
	]
};
<\/script>
<svelte:head>
	<Preload {assetsToPreload}></Preload>
</svelte:head>`,link:`<script>
	import linkPage from "$util/LinkPage.js";
<\/script>

<main>
	<a href={linkPage("hmm")}>Look, this works! :0</a>
</main>`};function Lt(P){let t,d,b,Y,V,G,x,J,K,I,Q,W,L,Z,ee,_,te,R,se,le,ae,oe,ne,re,$,ie,he,v,ce,de,ue,M,me,pe,fe,be,B,ve,ge,A,_e,we,H,ye,Ee,S,Te,ke,Pe,xe,N,Ie,Le,Re,$e,U,Me,Be,p,C,Ae,He,u,j,Se,Ne,f,Ue,Ce,je,E,De,qe,w,D,Oe,Xe,y,q,Ye,ze,O,Fe,X;return _=new It({}),{c(){t=l("main"),d=l("p"),b=h("This is a simple demo of the small tools that are included in this template. As well as some reminders for problems I've already solved."),Y=o(),V=l("br"),G=o(),x=l("h1"),J=h("Components"),K=o(),I=l("p"),Q=h("Create a new line only on small screens with the MobileNewline component."),W=o(),L=l("span"),Z=h("Try resizing your browser window"),ee=o(),gt(_.$$.fragment),te=o(),R=l("span"),se=h("| or switching to mobile in devtools."),le=o(),ae=l("br"),oe=o(),ne=l("br"),re=o(),$=l("p"),ie=h("Preload assets with the Preload component in the page's svelte file. Use it like this:"),he=o(),v=l("textarea"),ce=o(),de=l("br"),ue=o(),M=l("p"),me=h("The component generates preload link elements. The value is the src (which is found by importing the file), and the key is the as attribute."),pe=o(),fe=l("br"),be=o(),B=l("h1"),ve=h("Defaults"),ge=o(),A=l("h2"),_e=h("Defined in app.html"),we=o(),H=l("p"),ye=h("This button has a pointer cursor"),Ee=o(),S=l("button"),Te=h("Tada"),ke=o(),Pe=l("br"),xe=o(),N=l("p"),Ie=h("All text also uses sans-serif"),Le=o(),Re=l("br"),$e=o(),U=l("h1"),Me=h("Misc"),Be=o(),p=l("ol"),C=l("li"),Ae=h("The build process is configured to minify the HTML"),He=o(),u=l("li"),j=l("p"),Se=h(`You can change the base URL by setting URL_PREFIX in svelte.config.js. It'll only be active in the build (not in the dev server) and it requires a rebuild to change. You can also do a build without it using the npm script "testBuild" or by using the VS Code task.`),Ne=o(),f=l("textarea"),Ue=o(),Ce=l("br"),je=o(),E=l("a"),De=h("Look, this works! :0"),qe=o(),w=l("li"),D=l("p"),Oe=h("Tools.js currently only has 2 functions, but I'll include new ones in the future as I need them:"),Xe=o(),y=l("ul"),q=l("li"),Ye=h("format.time takes a number of seconds and converts it into a HH:MM:SS format. The second argument lets you limit the number of digit pairs (e.g exclude hours by setting it to 2)."),ze=o(),O=l("li"),Fe=h(`format.shorten takes a string as its first argument and the target length as the second. If it's over, it'll be trimmed to the max length and have the last 3 characters replaced with "...".`),this.h()},l(m){t=a(m,"MAIN",{});var s=i(t);d=a(s,"P",{});var Ge=i(d);b=c(Ge,"This is a simple demo of the small tools that are included in this template. As well as some reminders for problems I've already solved."),Ge.forEach(r),Y=n(s),V=a(s,"BR",{}),G=n(s),x=a(s,"H1",{});var Je=i(x);J=c(Je,"Components"),Je.forEach(r),K=n(s),I=a(s,"P",{});var Ke=i(I);Q=c(Ke,"Create a new line only on small screens with the MobileNewline component."),Ke.forEach(r),W=n(s),L=a(s,"SPAN",{});var Qe=i(L);Z=c(Qe,"Try resizing your browser window"),Qe.forEach(r),ee=n(s),_t(_.$$.fragment,s),te=n(s),R=a(s,"SPAN",{});var We=i(R);se=c(We,"| or switching to mobile in devtools."),We.forEach(r),le=n(s),ae=a(s,"BR",{}),oe=n(s),ne=a(s,"BR",{}),re=n(s),$=a(s,"P",{});var Ze=i($);ie=c(Ze,"Preload assets with the Preload component in the page's svelte file. Use it like this:"),Ze.forEach(r),he=n(s),v=a(s,"TEXTAREA",{cols:!0,rows:!0}),i(v).forEach(r),ce=n(s),de=a(s,"BR",{}),ue=n(s),M=a(s,"P",{});var et=i(M);me=c(et,"The component generates preload link elements. The value is the src (which is found by importing the file), and the key is the as attribute."),et.forEach(r),pe=n(s),fe=a(s,"BR",{}),be=n(s),B=a(s,"H1",{});var tt=i(B);ve=c(tt,"Defaults"),tt.forEach(r),ge=n(s),A=a(s,"H2",{});var st=i(A);_e=c(st,"Defined in app.html"),st.forEach(r),we=n(s),H=a(s,"P",{});var lt=i(H);ye=c(lt,"This button has a pointer cursor"),lt.forEach(r),Ee=n(s),S=a(s,"BUTTON",{});var at=i(S);Te=c(at,"Tada"),at.forEach(r),ke=n(s),Pe=a(s,"BR",{}),xe=n(s),N=a(s,"P",{});var ot=i(N);Ie=c(ot,"All text also uses sans-serif"),ot.forEach(r),Le=n(s),Re=a(s,"BR",{}),$e=n(s),U=a(s,"H1",{});var nt=i(U);Me=c(nt,"Misc"),nt.forEach(r),Be=n(s),p=a(s,"OL",{});var T=i(p);C=a(T,"LI",{});var rt=i(C);Ae=c(rt,"The build process is configured to minify the HTML"),rt.forEach(r),He=n(T),u=a(T,"LI",{});var g=i(u);j=a(g,"P",{});var it=i(j);Se=c(it,`You can change the base URL by setting URL_PREFIX in svelte.config.js. It'll only be active in the build (not in the dev server) and it requires a rebuild to change. You can also do a build without it using the npm script "testBuild" or by using the VS Code task.`),it.forEach(r),Ne=n(g),f=a(g,"TEXTAREA",{cols:!0,rows:!0}),i(f).forEach(r),Ue=n(g),Ce=a(g,"BR",{}),je=n(g),E=a(g,"A",{href:!0});var ht=i(E);De=c(ht,"Look, this works! :0"),ht.forEach(r),g.forEach(r),qe=n(T),w=a(T,"LI",{});var z=i(w);D=a(z,"P",{});var ct=i(D);Oe=c(ct,"Tools.js currently only has 2 functions, but I'll include new ones in the future as I need them:"),ct.forEach(r),Xe=n(z),y=a(z,"UL",{});var F=i(y);q=a(F,"LI",{});var dt=i(q);Ye=c(dt,"format.time takes a number of seconds and converts it into a HH:MM:SS format. The second argument lets you limit the number of digit pairs (e.g exclude hours by setting it to 2)."),dt.forEach(r),ze=n(F),O=a(F,"LI",{});var ut=i(O);Fe=c(ut,`format.shorten takes a string as its first argument and the target length as the second. If it's over, it'll be trimmed to the max length and have the last 3 characters replaced with "...".`),ut.forEach(r),F.forEach(r),z.forEach(r),T.forEach(r),s.forEach(r),this.h()},h(){v.readOnly=!0,k(v,"cols","80"),k(v,"rows","12"),v.value=vt.preload,f.readOnly=!0,k(f,"cols","80"),k(f,"rows","10"),f.value=P[0],k(E,"href",Pt("linkDemo"))},m(m,s){bt(m,t,s),e(t,d),e(d,b),e(t,Y),e(t,V),e(t,G),e(t,x),e(x,J),e(t,K),e(t,I),e(I,Q),e(t,W),e(t,L),e(L,Z),e(t,ee),wt(_,t,null),e(t,te),e(t,R),e(R,se),e(t,le),e(t,ae),e(t,oe),e(t,ne),e(t,re),e(t,$),e($,ie),e(t,he),e(t,v),e(t,ce),e(t,de),e(t,ue),e(t,M),e(M,me),e(t,pe),e(t,fe),e(t,be),e(t,B),e(B,ve),e(t,ge),e(t,A),e(A,_e),e(t,we),e(t,H),e(H,ye),e(t,Ee),e(t,S),e(S,Te),e(t,ke),e(t,Pe),e(t,xe),e(t,N),e(N,Ie),e(t,Le),e(t,Re),e(t,$e),e(t,U),e(U,Me),e(t,Be),e(t,p),e(p,C),e(C,Ae),e(p,He),e(p,u),e(u,j),e(j,Se),e(u,Ne),e(u,f),e(u,Ue),e(u,Ce),e(u,je),e(u,E),e(E,De),e(p,qe),e(p,w),e(w,D),e(D,Oe),e(w,Xe),e(w,y),e(y,q),e(q,Ye),e(y,ze),e(y,O),e(O,Fe),X=!0},p(m,[s]){(!X||s&1)&&(f.value=m[0])},i(m){X||(yt(_.$$.fragment,m),X=!0)},o(m){Et(_.$$.fragment,m),X=!1},d(m){m&&r(t),Tt(_)}}}function Rt(P,t,d){let b="";return kt(Y=>{d(0,b=vt.link)}),[b]}class Bt extends mt{constructor(t){super(),pt(this,t,Rt,Lt,ft,{})}}export{Bt as default};
